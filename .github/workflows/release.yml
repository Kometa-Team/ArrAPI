name: PyPI Release

on:
  create:
    tags:
      - v*

jobs:
  release:
    runs-on: ubuntu-latest
    steps:

      - name: Create Release for new Tag
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: ${{ secrets.REPO_NAME }} ${{ github.event.ref }}
          repo_token: ${{ secrets.PAT }}
          prerelease: false

      - name: Check Out Repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel twine
          pip install --no-cache-dir --upgrade --requirement requirements.txt

      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*

      - name: Discord Success Notification
        uses: Kometa-Team/discord-notifications@master
        if: success()
        with:
          webhook_id_token: ${{ secrets.BUILD_WEBHOOK }}
          title: "${{ vars.NAME }} ${{ github.event.ref }}: ${{ vars.TEXT_SUCCESS }}"
          url: https://github.com/Kometa-Team/${{ vars.NAME }}/actions/runs/${{ github.run_id }}
          color: ${{ vars.COLOR_SUCCESS }}
          username: ${{ vars.BOT_NAME }}
          avatar_url: ${{ vars.BOT_IMAGE }}
          author: ${{ vars.PYPI_NAME }}
          author_icon_url: ${{ vars.PYPI_IMAGE }}

      - name: Discord Failure Notification
        uses: Kometa-Team/discord-notifications@master
        if: failure()
        with:
          webhook_id_token: ${{ secrets.BUILD_WEBHOOK }}
          message: <@&1079153184007790652>
          title: "${{ vars.NAME }} ${{ github.event.ref }}: ${{ vars.TEXT_FAILURE }}"
          url: https://github.com/Kometa-Team/${{ vars.NAME }}/actions/runs/${{ github.run_id }}
          color: ${{ vars.COLOR_FAILURE }}
          username: ${{ vars.BOT_NAME }}
          avatar_url: ${{ vars.BOT_IMAGE }}
          author: ${{ vars.PYPI_NAME }}
          author_icon_url: ${{ vars.PYPI_IMAGE }}